name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4.1.0

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - run: pnpm install
      - run: pnpm run lint:ci
        continue-on-error: true

  #  test:
  #    runs-on: ubuntu-latest
  #
  #    strategy:
  #      matrix:
  #        node: [ 18 ]
  #
  #    steps:
  #      - uses: actions/checkout@v4
  #      - uses: pnpm/action-setup@v4.1.0
  #
  #      - uses: actions/setup-node@v4
  #        with:
  #          node-version: ${{ matrix.node }}
  #          cache: 'pnpm'
  #
  #      - run: pnpm install
  #      - run: pnpm run test:ci

  build:
    needs: [ lint ] # , test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4.1.0

      - name: Find Version
        if: startsWith(github.ref, 'refs/tags/')
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: image
          tags: type=semver,pattern={{version}}

      - name: Set Cargo.toml version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          sed -i'' "s/0\\.0\\.0-git/${{ steps.meta.outputs.version }}/" projects/feel/style/package.json
          sed -i'' "s/0\\.0\\.0-git/${{ steps.meta.outputs.version }}/" projects/feel/notification/package.json
          sed -i'' "s/0\\.0\\.0-git/${{ steps.meta.outputs.version }}/" projects/feel/form/package.json
          sed -i'' "s/0\\.0\\.0-git/${{ steps.meta.outputs.version }}/" projects/feel/layout/package.json

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - run: pnpm install
      - run: pnpm run build:ci

      - uses: actions/upload-artifact@v4
        with:
          name: feel
          path: dist

  publish:
    needs: [ build ]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    strategy:
      matrix:
        module: [ style, notification, form, layout ]

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4.1.0

      - uses: actions/download-artifact@v4
        with:
          name: feel
          path: dist

      - uses: actions/setup-node@v4
        with:
          registry-url: https://codeberg.org/api/packages/m4rc3l/npm/
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - run: pnpm publish --no-git-checks --access=public
        working-directory: dist/feel/${{ matrix.module }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITEA_REGISTRY_TOKEN }}
